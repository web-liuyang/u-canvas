<script lang="ts" setup>
import finger from "./finger.uvue";
import {
	//
	FTapEvent,
	FTouchcancelEvent,
	FTouchendEvent,
	FTouchmoveEvent,
	FTouchstartEvent,
	FZoominEvent,
	FZoomoutEvent,
} from "./event";

const props = defineProps<{
	id: string;
	onTap?: (event: FTapEvent) => void;
	onTouchstart?: (event: FTouchstartEvent) => void;
	onTouchmove?: (event: FTouchmoveEvent) => void;
	onTouchend?: (event: FTouchendEvent) => void;
	onTouchcancel?: (event: FTouchcancelEvent) => void;
	onZoomin?: (event: FZoominEvent) => void;
	onZoomout?: (event: FZoomoutEvent) => void;
}>();

const onTap = (event: FTouchendEvent) => {
	console.log("interactive-canvas onTap");
	props.onTap?.(event);
};
</script>

<template>
	<!-- <canvas :id="props.id" class="interactive-canvas" /> -->
	<finger
		@onTap="onTap"
		@onTouchstart="props.onTouchstart"
		@onTouchmove="props.onTouchmove"
		@onTouchend="props.onTouchend"
		@onTouchcancel="props.onTouchcancel"
		@onZoomin="props.onZoomin"
		@onZoomout="props.onZoomout"
	>
		<canvas :id="props.id" class="interactive-canvas" />
	</finger>
</template>

<style>
.interactive-canvas {
	width: 100%;
	height: 100%;
}
</style>
